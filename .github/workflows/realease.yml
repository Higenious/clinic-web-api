name: Deploy to AWS Fargate

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Unique Image Tag = short SHA
      - name: Set image tag
        id: set_tag
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set ECR repository details
        run: |
          echo "ECR_REPOSITORY=711538462588.dkr.ecr.us-east-1.amazonaws.com/myclinic-api" >> $GITHUB_ENV
          echo "CONTAINER_NAME=myclinic-app-container" >> $GITHUB_ENV 

      - name: Build, tag, and push image to ECR
        run: |
          # Build without cache to avoid old code
          docker build --no-cache -t myclinic-api .

          # Tag with SHA
          docker tag myclinic-api:latest ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

          # (Optional) Also push 'latest'
          docker tag myclinic-api:latest ${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ env.ECR_REPOSITORY }}:latest

      - name: Render new ECS task definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json   # Your base task def file
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: myclincs-web-api-services
          cluster: myclinic-cluster
          wait-for-service-stability: false
